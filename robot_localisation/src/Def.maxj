/* vim: set filetype=java : */

import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEStructType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEStructType.StructFieldType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;

public class Def {

	static final DFEType compType = KernelLib.dfeFloat(8, 24);

	// State Type
	public static final DFEStructType state_t = new DFEStructType(
		new StructFieldType("x", compType),
		new StructFieldType("y", compType),
		new StructFieldType("h", compType)
	);
	public static int state_slot = 3;

	// Control Type
	public static final DFEStructType control_t = new DFEStructType(
		new StructFieldType("d", compType),
		new StructFieldType("r", compType)
	);
	public static int control_slot = 2;

	// Seeds Type
	public static int seed_slot = 3;
	public static final DFEVectorType<DFEVar> seeds_t = new DFEVectorType<DFEVar>(KernelLib.dfeRawBits(128),seed_slot);

	// Design Parameters
	public static int NPMin = 2048;
	public static int NPMax = 8192;
	public static int NA = 1;
	public static int H = 1;
	public static double S = 0.5;

	// System Parameters
	public static int NC_inner = 1; // Parallelisation along itl_inner, between 1 and 4 inclusive
	public static int NC_P = 1; // Parallelisation along NP
	public static int Clk_core = 150;
	public static int Clk_mem = 333;

	// Weight vector for multiple cores
	public static final DFEVectorType<DFEVar> weight_inner_t = new DFEVectorType<DFEVar>(compType,NC_inner);

	// Application Parameters

}
